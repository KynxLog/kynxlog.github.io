{
    "version": "https://jsonfeed.org/version/1",
    "title": "隙间集",
    "description": "",
    "home_page_url": "https://kynx.qzz.io",
    "feed_url": "https://kynx.qzz.io/feed.json",
    "user_comment": "",
    "author": {
        "name": "和光同尘"
    },
    "items": [
        {
            "id": "https://kynx.qzz.io/absolute-positioning/",
            "url": "https://kynx.qzz.io/absolute-positioning/",
            "title": "绝对定位",
            "summary": "在使用相对定位对元素进行微调之后，在相对定位的元素内就可以对内部的组件进行很轻易的左右对齐和上下移动等等操作。但是相较于相对定位，在很多概念上面其实并不是非常一致，例如普通文档流中和定位上下文（包含块）等。 .elements-container&hellip;",
            "content_html": "<p>在使用相对定位对元素进行微调之后，在相对定位的元素内就可以对内部的组件进行很轻易的左右对齐和上下移动等等操作。但是相较于相对定位，在很多概念上面其实并不是非常一致，例如普通文档流中和定位上下文（包含块）等。</p><h2 id=\"概念\">概念</h2>\n<table>\n<thead>\n<tr>\n<th align=\"left\">相对定位</th>\n<th align=\"left\">绝对定位</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">相对于元素自己本身的位置<br>原本的元素会继续保持在原本文档流的位置不动</td>\n<td align=\"left\">相对于非<code>static</code>（静态）的父元素进行移动，若没有父元素或所有父元素均为<code>static</code>（静态），则默认相对于浏览器窗口进行移动。<br>原内容会脱离正常的文档流，会对后面的元素产生一定的影响。</td>\n</tr>\n</tbody></table>\n<h2 id=\"语法格式\">语法格式</h2>\n<h3 id=\"属性\">属性</h3>\n<blockquote>\n<ul>\n<li><code>position</code>：默认值是<code>static</code>，绝对定位则是<code>absolute</code></li>\n<li><code>top</code>：<strong>正值</strong>：相对于父元素的上边框增加多少距离（向下移动）；<strong>负值</strong>：相对于父元素的上边框减少多少距离（向上移动）；<strong>优先级高于<code>bottom</code></strong></li>\n<li><code>left</code>：<strong>正值</strong>：相对于父元素的左边框增加多少距离（向右移动）；<strong>负值</strong>：相对于父元素的左边框减少多少距离（向左移动）；<strong>优先级高于<code>right</code></strong></li>\n<li><code>bottom</code>：<strong>正值</strong>：相对于父元素的下边框增加多少距离（向上移动）；<strong>负值</strong>：相对于父元素的下边框减少多少距离（向下移动）</li>\n<li><code>right</code>：<strong>正值</strong>：相对于父元素的右边框增加多少距离（向左移动）；<strong>负值</strong>：相对于父元素的右边框减少多少距离（向右移动）</li>\n<li><code>z-index</code>：层级顺序，<strong>绝对定位元素高于普通文档流中元素</strong></li>\n<li><strong>当元素宽<code>width</code>和高<code>height</code>未定义的时候两个元素同时生效，无优先级之分</strong></li>\n</ul>\n</blockquote>\n<h3 id=\"格式\">格式</h3>\n<pre><code class=\"language-css\">.elements-container {\n    position: relative;\n}\n.elements {\n    position: absolute;\n    top: 10px;\n    left: 20px;\n}\n</code></pre>\n<h2 id=\"案例\">案例</h2>\n<p>我认为最实用的还是下拉菜单这样的功能，于是选取这一个。</p><p><strong>以下是源码：</strong></p><pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;style&gt;\n        .dropdown {\n            position: relative;\n            display: inline-block;\n            margin: 20px;\n        }\n        \n        .dropbtn {\n            background: #3498db;\n            color: white;\n            padding: 12px 24px;\n            border: none;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 16px;\n        }\n        \n        .dropdown-content {\n            position: absolute;\n            top: 100%;\n            left: 0;\n            min-width: 160px;\n            background: white;\n            box-shadow: 0 8px 16px rgba(0,0,0,0.2);\n            opacity: 0;\n            transform: translate(0, -20px);\n            visibility: hidden;\n            transition: all 0.3s ease;\n        }\n        \n        .dropdown-content a {\n            display: block;\n            padding: 12px 16px;\n            text-decoration: none;\n            color: #333;\n            border-bottom: 1px solid #eee;\n        }\n        \n        .dropdown-content a:hover {\n            background: #f5f5f5;\n        }\n        \n        .dropdown:hover .dropdown-content {\n            opacity: 1;\n            transform: translate(0, 0);\n            visibility: visible;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div class=&quot;dropdown&quot;&gt;\n        &lt;button class=&quot;dropbtn&quot;&gt;下拉菜单&lt;/button&gt;\n        &lt;div class=&quot;dropdown-content&quot;&gt;\n            &lt;a href=&quot;#&quot;&gt;菜单项 1&lt;/a&gt;\n            &lt;a href=&quot;#&quot;&gt;菜单项 2&lt;/a&gt;\n            &lt;a href=&quot;#&quot;&gt;菜单项 3&lt;/a&gt;\n            &lt;a href=&quot;#&quot;&gt;菜单项 4&lt;/a&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><strong>效果预览：</strong>\n<!DOCTYPE html><html><head><style>.dropdown{position:relative;display:inline-block;margin:20px;}.dropbtn{background:#3498db;color:white;padding:12px 24px;border:none;border-radius:4px;cursor:pointer;font-size:16px;}.dropdown-content{position:absolute;top:100%;left:0;min-width:160px;background:white;box-shadow:0 8px 16px rgba(0,0,0,0.2);opacity:0;transform:translate(0,-20px);visibility:hidden;transition:all 0.3s ease;}.dropdown-content a{display:block;padding:12px 16px;text-decoration:none;color:#333;border-bottom:1px solid #eee;}.dropdown-content a:hover{background:#f5f5f5;}.dropdown:hover .dropdown-content{opacity:1;transform:translate(0,0);visibility:visible;}</style></head><body><div class=\"dropdown\"><button class=\"dropbtn\">下拉菜单</button><div class=\"dropdown-content\"><a href=\"#\">菜单项 1</a><a href=\"#\">菜单项 2</a><a href=\"#\">菜单项 3</a><a href=\"#\">菜单项 4</a></div></div></body></html></p>",
            "image": "https://kynx.qzz.io/media/posts/33/absolute.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "HTML&amp;CSS指北"
            ],
            "date_published": "2025-10-15T20:40:15+08:00",
            "date_modified": "2025-10-15T20:50:38+08:00"
        },
        {
            "id": "https://kynx.qzz.io/mysql-query/",
            "url": "https://kynx.qzz.io/mysql-query/",
            "title": "查询",
            "summary": "之前梳理过最简单的查询查询命令，也就是查询所有字段的命令，现在相比之前查询所有字段的命令无非就是多加上几个判断，筛选的条件，却可以使查询的内容更精准，提升查询的效率。 格式：&hellip;",
            "content_html": "<p>之前梳理过最简单的查询查询命令，也就是查询所有字段的命令，现在相比之前查询所有字段的命令无非就是多加上几个判断，筛选的条件，却可以使查询的内容更精准，提升查询的效率。</p><h2 id=\"单表查询\">单表查询</h2>\n<h3 id=\"查询所有字段：\">查询所有字段：</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-sql\">SELECT * FROM 表格;\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-sql\">/* 查询department表所有字段：*/\nSELECT * FROM department;\n</code></pre>\n<h3 id=\"查询指定字段数据\">查询指定字段数据</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-sql\">SELECT 字段1, 字段2 FROM 表名;\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-sql\">/* 查询student表中的studemt_id和student_name字段 */\nSELECT studemt_id, student_name FROM student;\n</code></pre>\n<h3 id=\"为指定字段添加别名\">为指定字段添加别名</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-sql\">SELECT 字段1 AS 别名1, 字段2 AS 别名2 FROM 表名;\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-sql\">/* 将student表中studemt_id命名为学号，student_name命名为姓名 */\nSELECT studemt_id AS 学号, student_name AS 姓名 FROM student;\n</code></pre>\n<h3 id=\"去除重复值\">去除重复值</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-sql\">SELECT DISTINCT 字段 FROM 表名;\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-sql\">/* 去除学生表中重复的学生名字 */\nSELECT DISTINCT student_name FROM student;\n</code></pre>\n<h2 id=\"条件查询\">条件查询</h2>\n<h3 id=\"where条件判断\">WHERE条件判断</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-sql\">SELECT *或字段名 FROM 表名 WHERE 判断条件;\nSELECT *或字段名 FROM 表名 WHERE (判断条件1) AND (判断条件2);\nSELECT *或字段名 FROM 表名 WHERE YEAR();\nSELECT *或字段名 FROM 表名 WHERE (字段 = &#39;值&#39; OR 字段 = &#39;值&#39;) AND 字段 = &#39;值&#39;;\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-sql\">/* 从学生表中筛选出学号为01的所有字段 */\nSELECT * FROM student WHERE student_id = &#39;01&#39;;\n\n/* 从学生表中筛选出学号01~07的 */\nSELECT * FROM student WHERE (student_id &lt;= &#39;01&#39;) AND (student_id &gt;= &#39;07&#39;);\n\n/* 从学生表中筛选出生日是2008年的 */\nSELECT * FROM student WHERE YEAR(birthday) = 2008;\n\n/* 从学生表中筛选出生学号是1或者是9的，并且性别为男。用括号将OR括起来是因为AND的优先级更高 */\nSELECT * FROM student WHERE(student_id = &#39;1&#39; OR student_id = &#39;9&#39;) AND gender = &#39;男&#39; ;\n</code></pre>\n<h3 id=\"in运算符\">IN运算符</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-sql\">SELECT *或字段名 FROM 表名 WHERE 字段 IN (值1, 值2);\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-sql\">/* 从学生表中筛选出学号是1，2，3的人的信息 */\nSELECT * FROM student WHERE student_id IN (1, 2, 3);\n</code></pre>\n<h3 id=\"between···and···运算符\">BETWEEN···AND···运算符</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-sql\">SELECT *或字段名 FROM 表名 WHERE 字段 BETWEEN 值 AND 值;\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-sql\">/* 从学生表中筛选出学号是1，2，3的人的信息 */\nSELECT * FROM student WHERE student_id IN BETWEEN 1 AND 3;\n</code></pre>\n<h3 id=\"like-运算符\">LIKE 运算符</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-sql\">SELECT *或字段名 FROM 表名 WHERE 字段 LIKE &#39;_值&#39;;\nSELECT *或字段名 FROM 表名 WHERE 字段 LIKE &#39;值%&#39;;\nSELECT *或字段名 FROM 表名 WHERE 字段 LIKE &#39;_值%&#39;;\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-sql\">/* 从学生表中筛选出两个字名字，且其中有光字 - 和光*/\nSELECT * FROM student WHERE student_name LIKE &#39;_光&#39;;\n/* 从学生表中筛选出姓和的 - 和光*/\nSELECT * FROM student WHERE student_name LIKE &#39;和%&#39;;\n/* 从学生表中筛选出光前面有一个字，且后面字数不限的 - 和光同尘*/\nSELECT * FROM student WHERE student_name LIKE &#39;_光%&#39;;\n</code></pre>\n<h3 id=\"is-null运算符\">IS NULL运算符</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-sql\">SELECT *或字段名 FROM 表名 WHERE 字段 IS NULL;\nSELECT *或字段名 FROM 表名 WHERE 字段 IS NOT NULL;\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-sql\">/* 从学生表中筛选出姓名是空值的 */\nSELECT * FROM student WHERE student_name IS NULL;\n\n/* 从学生表中筛选出姓名不是空值的 */\nSELECT * FROM student WHERE student_name IS NULL;\n</code></pre>\n",
            "image": "https://kynx.qzz.io/media/posts/32/Query.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "MySQL学习笔记"
            ],
            "date_published": "2025-10-14T23:18:18+08:00",
            "date_modified": "2025-10-14T23:34:56+08:00"
        },
        {
            "id": "https://kynx.qzz.io/relative-positioning/",
            "url": "https://kynx.qzz.io/relative-positioning/",
            "title": "相对定位",
            "summary": "之前调整元素的位置只能使用margin,padding这些属性对其进行调整，例如元素的位置和周围的元素看起来高度不协调，一定是使用类似margin-top: 2px这样的方法去调整高度。但是这样必定会出现一个问题&hellip;",
            "content_html": "<p>之前调整元素的位置只能使用<code>margin</code>,<code>padding</code>这些属性对其进行调整，例如元素的位置和周围的元素看起来高度不协调，一定是使用类似<code>margin-top: 2px</code>这样的方法去调整高度。但是这样必定会出现一个问题 — 如果存在父级元素，父级元素会受到这样移动的影响。如果想要达到移动的同时可以解决对父级元素的影响，相对定位一定是一个很好的解决方案。</p><h2 id=\"概念\">概念</h2>\n<p>相对定位的相对是相对于元素自己本身的位置，所以其原本的元素会继续保持在原本文档流的位置不动，只是显示的图片，文字等信息会进行位置的移动。</p><h2 id=\"语法格式\">语法格式</h2>\n<h3 id=\"属性\">属性</h3>\n<blockquote>\n<ul>\n<li><code>position</code>：默认值是<code>static</code>，相对定位则是<code>relative</code></li>\n<li><code>top</code>：<strong>正值</strong>：相对于原有的上边框增加多少距离（向下移动）；<strong>负值</strong>：相对于原有的上边框减少多少距离（向上移动）；<strong>优先级高于<code>bottom</code></strong></li>\n<li><code>left</code>：<strong>正值</strong>：相对于原有的左边框增加多少距离（向右移动）；<strong>负值</strong>：相对于原有的左边框减少多少距离（向左移动）；<strong>优先级高于<code>right</code></strong></li>\n<li><code>bottom</code>：<strong>正值</strong>：相对于原有的下边框增加多少距离（向上移动）；<strong>负值</strong>：相对于原有的下边框减少多少距离（向下移动）</li>\n<li><code>right</code>：<strong>正值</strong>：相对于原有的右边框增加多少距离（向左移动）；<strong>负值</strong>：相对于原有的右边框减少多少距离（向右移动）</li>\n<li><code>z-index</code>：层级顺序，<strong>层级顺序相同时，书写位置靠后的默认层级更高</strong></li>\n</ul>\n</blockquote>\n<h3 id=\"格式\">格式</h3>\n<pre><code class=\"language-css\">.elements {\n    position: relative;\n    top: 10px;\n    left: 20px;\n}\n</code></pre>\n<p><code>注：top和，left层级高，写法就以这两个属性来写，另外两种的属性皆可实现相同效果</code></p><h2 id=\"案例\">案例</h2>\n<p>我觉得对话框这样的一个案例是其中可以写的东西最多的，于是只使用了这一个</p><p><strong>以下是源码：</strong></p><pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=&quot;utf-8&quot;&gt;\n        &lt;title&gt;对话框&lt;/title&gt;\n        &lt;style&gt;\n            * {\n                margin: 0;\n            }\n            .tip {\n                width: 150px;\n                height: 80px;\n                border: 4px solid red;\n                border-radius: 6px;\n                margin: 50px auto;\n            }\n            .triangle {\n                width: 10px;\n                height: 10px;\n                border: 4px solid red;\n                position: relative;\n                left: 50%;\n                top: -10px;\n                transform: translate(-50%) rotate(45deg);\n                border-bottom: none;\n                border-right: none;\n                background-color: #fff;\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=&quot;tip&quot;&gt;\n            &lt;div class=&quot;triangle&quot;&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><strong>效果预览：</strong></p><div class=\"tip\"><div class=\"triangle\"></div></div><style>.tip{width:150px;height:80px;border:4px solid red;border-radius:6px;margin:50px auto;}.triangle{width:10px;height:10px;border:4px solid red;position:relative;left:50%;top:-8px;transform:translate(-50%) rotate(45deg);border-bottom:none;border-right:none;background-color:#fff;}</style>\n",
            "image": "https://kynx.qzz.io/media/posts/31/Relative-positioning.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "HTML&amp;CSS指北"
            ],
            "date_published": "2025-10-12T11:23:31+08:00",
            "date_modified": "2025-10-15T19:47:26+08:00"
        },
        {
            "id": "https://kynx.qzz.io/android-studio-configuration-record/",
            "url": "https://kynx.qzz.io/android-studio-configuration-record/",
            "title": "Android Studio配置记录",
            "summary": "Android Studio来自谷歌，安装和配置环境的时候还是免不了要下载文件，下载文件连接国外服务器会导致下载速度变慢，所以还需要配置额外的下载网址。&hellip;",
            "content_html": "<p>Android Studio来自谷歌，安装和配置环境的时候还是免不了要下载文件，下载文件连接国外服务器会导致下载速度变慢，所以还需要配置额外的下载网址。</p><h2 id=\"安装\">安装</h2>\n<p>安装的时候会出现这样的界面，需要<strong>将Android Virtual Device取消勾选</strong>，如果有模拟器则不需要这个，没有模拟器在后期配置时也可以直接下对应的SDK，避免多下载不必要的。</p><figure class=\"post__image\"><img loading=\"lazy\" src=\"../media/files/Android开发笔记/image-20251012091351371.png\" alt=\"image-20251012091351371\" data-is-external-image=\"true\"></figure><p><code>注：安装的时候所有的路径必须全部都是英文，否则会出现ASCII码的报错提示</code></p><h2 id=\"新建项目\">新建项目</h2>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"../media/files/Android开发笔记/image-20251012091846471.png\" alt=\"image-20251012091846471\" data-is-external-image=\"true\"></figure><p>项目有很多种，常用的一般只有<code>Empty Activity</code>和<code>Empty Views Activity</code>，<code>Empty Activity</code>这一种一般是使用<strong>Jetpack Compose</strong>，而<code>Empty Views Activity</code>则是传统的<strong>XML格式</strong>。官方是构建新应用选择<strong>Jetpack Compose</strong>。</p><h2 id=\"配置\">配置</h2>\n<p>在进入新建项目的时候会自动开始构建，但是因为网络问题，构建必然是不成功的，所以需要进行配置。</p><h3 id=\"gradle\">Gradle</h3>\n<p>需要打开目录<code>gradle/wrapper/gradle-wrapper.properties</code></p><figure class=\"post__image\"><img loading=\"lazy\" src=\"../media/files/Android开发笔记/image-20251012094203968.png\" alt=\"image-20251012094203968\" data-is-external-image=\"true\"></figure><p>我这里已经改过了，下载的不是bin包，因为后面下载src包会很麻烦，所以直接使用腾讯云上面的all包就可以了</p><p><code>distributionUrl=https\\://mirrors.cloud.tencent.com/gradle/gradle-8.13-all.zip</code></p><p>这里的<code>gradle-8.13</code>打开文件是什么版本，现在就改成什么版本。</p><h3 id=\"maven\">Maven</h3>\n<p>打开<code>settings.gradle.kts</code>文件，按照图片添加</p><pre><code class=\"language-kotlin\">maven (&quot;https://maven.aliyun.com/repository/public&quot;)\nmaven (&quot;https://maven.aliyun.com/repository/google&quot;)\nmaven (&quot;https://maven.aliyun.com/repository/gradle-plugin&quot;)\nmaven (&quot;https://maven.aliyun.com/repository/central&quot;)\n</code></pre>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"../media/files/Android开发笔记/image-20251012094623801.png\" alt=\"image-20251012094623801\" data-is-external-image=\"true\"></figure><h2 id=\"重启软件，等待下载完成即可\">重启软件，等待下载完成即可</h2>\n<p>⏬ <strong><a href=\"https://s.fnnas.net/s/57f0f8357717412f80\">版本为<code>251.xxx</code>的中文语言汉化包</a></strong></p>",
            "image": "https://kynx.qzz.io/media/posts/29/Android-Studio.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "Android软件开发笔记"
            ],
            "date_published": "2025-10-12T09:49:10+08:00",
            "date_modified": "2025-10-12T22:44:59+08:00"
        },
        {
            "id": "https://kynx.qzz.io/nas-setup-and-usage/",
            "url": "https://kynx.qzz.io/nas-setup-and-usage/",
            "title": "NAS搭建及使用",
            "summary": "搭建 相对安装Linux操作系统而言FNOS的安装已经是十分简单的，进入U盘引导，选择Graphic&hellip;",
            "content_html": "<h2 id=\"搭建\">搭建</h2>\n<p>相对安装Linux操作系统而言FNOS的安装已经是十分简单的，进入U盘引导，选择<code>Graphic Install</code>即可，但是在系统分区大小和使用Swap上还是需要注意。</p><h3 id=\"系统分区\">系统分区</h3>\n<p>系统分区大小其推荐的大小通常是64G，但是往往占用没有这么高，所以我选择的是使用默认大小的一半。</p><figure class=\"post__image\"><img loading=\"lazy\" src=\"../media/files/隙光微尘/NAS搭建及使用/image-20251007184859616.png\" alt=\"安装后硬盘占用情况\" data-is-external-image=\"true\"></figure><h3 id=\"swap\">Swap</h3>\n<p>Swap这个东西就相当于Windows上面的内存分页和安卓上面的虚拟内存，在NAS上如果内存<code>&gt;8G</code>完全没有必要开这个去占储存空间。</p><h2 id=\"使用\">使用</h2>\n<h3 id=\"连接网址选择\">连接网址选择</h3>\n<p>我还是更愿意选择<code>fnos.net</code>，<code>5ddd.com</code>在我手上目前还没什么用处。之前带宽提升到8mbps，现在似乎已经没有了。</p><h3 id=\"账户\">账户</h3>\n<p>我个人还是更偏向于使用一个管理员账户，加上其他普通账户，这样即使密码泄露等问题都能进行改密码，改名字解决，即使他人登录对设备的破坏也不会很大。</p><h3 id=\"飞牛同步\">飞牛同步</h3>\n<p>这个功能算是我个人比较喜欢，但是因为小米云盘更好而展示没有找到使用的地方。</p><p>但是要是手机上面云空间存图片等东西完全够用也不想去额外购买网盘，使用NAS同步可以，但是毕竟不像小米云盘，iCloud一样有释放空间，如果文件没有完全同步过来使用软件对文件操作，容易出现同步失败，软件中很多操作也会出错。</p><figure class=\"post__image\"><img loading=\"lazy\" src=\"../media/files/隙光微尘/NAS搭建及使用/2735502f49ded478cabb2688bdbbb50e.jpg\" alt=\"飞牛同步\" data-is-external-image=\"true\"></figure>",
            "image": "https://kynx.qzz.io/media/posts/28/677f5c027c6a14541.jpg_e1080.webp",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "隙光微尘​"
            ],
            "date_published": "2025-10-07T19:47:07+08:00",
            "date_modified": "2025-10-12T11:47:46+08:00"
        },
        {
            "id": "https://kynx.qzz.io/modification-of-data-tables/",
            "url": "https://kynx.qzz.io/modification-of-data-tables/",
            "title": "数据表修改操作",
            "summary": "字段和数据是组成数据表的两大核心要素，因此对它们的更改操作至关重要，直接关系到数据的完整性、一致性和系统稳定性。 重命名操作可以分为以下两种写法：&hellip;",
            "content_html": "<p><strong>字段</strong>和<strong>数据</strong>是组成数据表的两大核心要素，因此对它们的更改操作至关重要，直接关系到数据的完整性、一致性和系统稳定性。</p><h2 id=\"字段信息的修改\">字段信息的修改</h2>\n<h3 id=\"重命名\">重命名</h3>\n<p><strong>重命名操作可以分为以下两种写法：</strong></p><pre><code class=\"language-mysql\">RENAME 旧名字 TO 新名字;\n</code></pre>\n<pre><code class=\"language-my\">ALTER TABLE 旧名字 RENAME 新名字;\n</code></pre>\n<p>两种写法没有任何区别,选择一个好记和习惯的即可。</p><h3 id=\"数据表中字段的增删改查操作\">数据表中字段的增删改查操作</h3>\n<h4 id=\"添加字段\">添加字段</h4>\n<pre><code class=\"language-mysql\">ALTER TABLE 表名 ADD 新字段名 数据类型 约束条件;\n</code></pre>\n<h4 id=\"删除字段\">删除字段</h4>\n<pre><code class=\"language-mysql\">ALTER TABLE 表名 DROP 字段名 ;\n</code></pre>\n<h4 id=\"修改字段\">修改字段</h4>\n<h5 id=\"修改除字段名的其他内容\">修改除字段名的其他内容</h5>\n<pre><code class=\"language-mysql\">ALTER TABLE 表名 MODIFY 字段名 数据类型 约束条件;\n</code></pre>\n<h5 id=\"修改字段名其他内容\">修改字段名+其他内容</h5>\n<pre><code class=\"language-mysql\">ALTER TABLE 表名 CHANGE 旧字段名 新字段名 数据类型 约束条件;\n</code></pre>\n<h2 id=\"数据操作\">数据操作</h2>\n<h3 id=\"插入\">插入</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-mysql\">INSERT INTO 表名 (字段, 字段) VALUES\n    (&#39;值1&#39;, &#39;值2&#39;),\n    (&#39;值1&#39;, &#39;值2&#39;);\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-mysql\">INSERT INTO department (department_id, department_name) VALUES\n    (&#39;01&#39;, &#39;技术部&#39;),\n    (&#39;02&#39;, &#39;财务部&#39;),\n    (&#39;03&#39;, &#39;人力资源部&#39;);\n</code></pre>\n<h3 id=\"修改\">修改</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-mysql\">UPDATE 表名\n    SET 字段=值, 字段=值, 字段=值 WHERE 条件表达式;\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-mysql\">UPDATE department\n    SET department_name=&#39;市场部&#39; WHERE department_id=&#39;01&#39;；\n</code></pre>\n<h3 id=\"删除\">删除</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-mysql\">DELETE FROM 表名 WHERE 条件表达式;\n</code></pre>\n<p><strong>例：</strong></p><pre><code class=\"language-mysql\">DELETE FROM department WHERE department_id=&#39;01&#39;；\n</code></pre>\n",
            "image": "https://kynx.qzz.io/media/posts/26/Shu-Ju-Biao-Xiu-Gai.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "MySQL学习笔记"
            ],
            "date_published": "2025-09-28T20:38:00+08:00",
            "date_modified": "2025-10-02T21:59:25+08:00"
        },
        {
            "id": "https://kynx.qzz.io/ui-design-language-reflections-on-the-release-of-liquid-glass/",
            "url": "https://kynx.qzz.io/ui-design-language-reflections-on-the-release-of-liquid-glass/",
            "title": "UI设计语言 — 观Liquid Glass发布感悟",
            "summary": "这个题目其实从一开始Beta版开始的时候就已经起草，但是一直到现在又重新写一遍，其中有我想讲的很多事情。 一开始看到的最多的是ios26的系统的发布，手机作为日常不离手的通讯工具，这个肯定是最收关注的。但是这种东西对于我来说其实是很无感的，毕竟就像Windows7换成Windows10，我反而会更喜欢Windows10一点，有可能是觉得平面的性能更好的缘故吧，但是在经历过很多的IDE洗礼之后我反而是更关注性能与视觉上的清晰——也就是文字的观感。在很多IDE上面其中背景的颜色以及文字的高亮都是可以调整的，但是在我自己瞎鼓捣的时候就很容易出现文字颜色和背景颜色十分相近而看不清楚的情况。&hellip;",
            "content_html": "<p>这个题目其实从一开始Beta版开始的时候就已经起草，但是一直到现在又重新写一遍，其中有我想讲的很多事情。</p><h2 id=\"为什么要用玻璃？\">为什么要用玻璃？</h2>\n<p>一开始看到的最多的是ios26的系统的发布，手机作为日常不离手的通讯工具，这个肯定是最收关注的。但是这种东西对于我来说其实是很无感的，毕竟就像Windows7换成Windows10，我反而会更喜欢Windows10一点，有可能是觉得平面的性能更好的缘故吧，但是在经历过很多的IDE洗礼之后我反而是更关注性能与视觉上的清晰——也就是文字的观感。在很多IDE上面其中背景的颜色以及文字的高亮都是可以调整的，但是在我自己瞎鼓捣的时候就很容易出现文字颜色和背景颜色十分相近而看不清楚的情况。</p><p>所以在一开始ios26 Beta版本刚刚出来的时候我其实是十分不理解苹果的用意的，因为手机作为一个再平常不过的通讯工具，喜欢玩游戏的注意的是游戏内容，喜欢社交的更注意和朋友之间的关系，很多人对于系统升级其实是无感的，毕竟很多年轻人都是上手即用，都不存在学习成本的，但是中年人和老年人却觉得界面陌生，甚至有人还会觉得手机会被淘汰的更快。与我而言这其实是对于我的一种煎熬，虽然我不使用，但是对于安卓也是一种影响，后来升级之后性能降低，续航减弱，也让我对这个设计语言充满着排斥和敌意。</p><p>最近ios26的公测版和正式版陆续发布，我发现之前在Beta版中的问题都得到了解决，这也是我第一次对于质感有点感觉，毕竟之前一直是觉得Google的Material UI十分的好，甚至根本就不需要高斯模糊，有这观感留给性能和续航不好吗？但是苹果用玻璃确实是玩出了真真正正的层级的感觉，例如解锁的时候，上滑之后就像是一扇从下而上的打开，整个视觉逻辑更强了，使得交互动画的意义更强了。</p><h2 id=\"liquid-glass-和-windows-7-一个设计语言是不是过时了？\">Liquid Glass 和 Windows 7 一个设计语言是不是过时了？</h2>\n<p>我觉得不会，毕竟在黑暗模式上面苹果已经证实了自己封闭的实力。不到一年时间，几乎全部的应用都已经吃上了黑暗模式，这个速度比安卓很多都要厂商用系统去强行将浅色模式应用改变成黑暗模式更彻底。毕竟是Swift，统一的标准执行起来确实速度是没话说的。</p><p>交互上面已经能够达到动画和外观的显示方式符合视觉逻辑，并且拥有自己的Swift语言，后面可能应用适配上面出现性能问题等，但是苹果应该是有能力去解决的。毕竟软件对于系统版本都卡的这么严，优化上比安卓这种要兼容各家系统的肯定是更快速，更轻松了。</p><h2 id=\"用续航和性能换得质感---关于我的看法\">用续航和性能换得质感 - 关于我的看法</h2>\n<p>我知道，这是所有手机用户纠结的一个问题，而且至今，甚至是未来都不会有定论的一个问题，或者说是阴谋论。如果说抛开负优化等厂商能主观决定的事情，只是将这个系统完美的适配到你手机上，和原系统相比，一定是不如原系统的，但是如果没有这个参照的话，其实你也感觉不出来很明显的差距了。但是升级的权力在用户手上，而且升与不升也不是考试的是非对错。</p><p>不过在于我这样一个喜欢Windows只用LTSC版本，安卓拿到手第一件事情关闭甚至卸载系统更新软件的人看来，这个答案已经不言而喻了。虽然我一个从ios15开始就换到红米的人来说，对于苹果的系统的确是没有什么发言权了，而且系统质量上面，苹果一定也是优于小米的，但是这也只是我的一点点看法，或许经历过什么重大变更之后或许也能觉得手机的安全比性能更重要，就像我当初从Windows精简版变成使用Windows LTSC版本，所以适合自己的，往往需要自己的经历去决定，尊重绝对的数据结论有的时候未必不是一种盲从呢？</p><h3 id=\"更多详细升级建议，见：\">更多详细升级建议，见：</h3>\n<h1 id=\"云泽の小屋\"><a href=\"https://zeyun.dpdns.org/ios26.html\">云泽の小屋</a></h1>\n",
            "image": "https://kynx.qzz.io/media/posts/25/25-2.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "隙光微尘​"
            ],
            "date_published": "2025-09-21T12:53:21+08:00",
            "date_modified": "2025-10-02T20:31:07+08:00"
        },
        {
            "id": "https://kynx.qzz.io/utilize-animation-to-achieve-complex-shape-transition-animations/",
            "url": "https://kynx.qzz.io/utilize-animation-to-achieve-complex-shape-transition-animations/",
            "title": "使用animation实现复杂形态过渡动画",
            "summary": "之前使用transition属性可以让元素在变换的时候有了过渡的动画效果，但是如果想要实现一个属性的三次甚至多次变换，就需要使用另外一个动画属性animation。 格式：&hellip;",
            "content_html": "<p>之前使用<code>transition</code>属性可以让元素在变换的时候有了过渡的动画效果，但是如果想要实现一个属性的三次甚至多次变换，就需要使用另外一个动画属性<code>animation</code>。</p><h2 id=\"animation属性组成\"><code>animation</code>属性组成</h2>\n<blockquote>\n<ol>\n<li><strong>定义</strong> - 移动时间中每一个部分需要变换的属性</li>\n<li><strong>应用</strong> - 将定义的动画应用到元素上</li>\n</ol>\n</blockquote>\n<h3 id=\"定义\">定义</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-css\">@keyframes {\n    0% {\n        \n    }\n    50% {\n        \n    }\n    100% {\n        \n    }\n}\n</code></pre>\n<p><strong>写法：</strong></p><blockquote>\n<ul>\n<li>其中间可以是1-99的任意值，<code>50%</code>仅为格式示意</li>\n<li>在大括号内直接写属性需要实现的效果</li>\n</ul>\n</blockquote>\n<p>定义开始和结尾，可以使用上面的格式也可以使用下面的格式，虽然正确，但是统一性不强</p><pre><code class=\"language-css\">@keyframes {\n    from {\n        \n    }\n    50% {\n        \n    }\n    to {\n        \n    }\n}\n</code></pre>\n<h3 id=\"应用\">应用</h3>\n<p><strong>格式：</strong></p><pre><code class=\"language-css\">.element {\n    animation: name(名称) duration(动画时间) timing-function(速度曲线) fill-mode(等待或者停止时显示的样式) delay(延迟时间) iteration-count(动画播放次数);\n    animation-play-state(动画暂停或者播放): ;\n}\n</code></pre>\n<p><strong>写法：</strong></p><blockquote>\n<ul>\n<li><code>animation-play-state</code>要单独写（<strong>例：</strong> 不要直接使用<code>animation: paused;</code>进行暂停）</li>\n<li>animation属性值需要按照顺序摆放，如果有<strong>不需要的直接不写即可</strong></li>\n</ul>\n</blockquote>\n<h2 id=\"animation进度条\"><code>animation</code>进度条</h2>\n<pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=&quot;utf-8&quot;&gt;\n        &lt;title&gt;进度条动画&lt;/title&gt;\n        &lt;style&gt;\n            .progressContainer {\n                margin: 20px auto;\n                width: 600px;\n                height: 20px;\n                background-color: grey;\n                border-radius: 20px;\n            }\n            .progressBar {\n                /* width: 200px; */\n                height: 20px;\n                background-color: green;\n                border-radius: 20px;\n                animation: fill 3s ease-in-out infinite;\n            }\n            @keyframes fill {\n                0% {\n                    width: 0;\n                }\n                100% {\n                    width: 600px;\n                }\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=&quot;progressContainer&quot;&gt;\n            &lt;div class=&quot;progressBar&quot;&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><strong>效果预览：</strong></p><div class=\"progressContainer\"><div class=\"progressBar\"></div></div><style>.progressContainer{margin:20px auto;width:600px;height:20px;background-color:grey;border-radius:20px;}.progressBar{height:20px;background-color:green;border-radius:20px;animation:fill 3s ease-in-out infinite;}@keyframes fill{0%{width:0;}100%{width:600px;}}</style>\n\n<h3 id=\"详细教程-\"><a href=\"../animation/tutorial.html\">详细教程 =&gt;</a></h3>\n",
            "image": "https://kynx.qzz.io/media/posts/24/24-2.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "HTML&amp;CSS指北"
            ],
            "date_published": "2025-09-20T09:11:29+08:00",
            "date_modified": "2025-10-14T20:56:11+08:00"
        },
        {
            "id": "https://kynx.qzz.io/data-table-operations/",
            "url": "https://kynx.qzz.io/data-table-operations/",
            "title": "数据表操作",
            "summary": "在数据库中会存储很多相同类型，主键和外键的数据，这些数据为了同时显示会归纳整理起来，从而需要数据表统一其格式。在 上一篇文章&hellip;",
            "content_html": "<p>在数据库中会存储很多相同类型，主键和外键的数据，这些数据为了同时显示会归纳整理起来，从而需要数据表统一其格式。在 <strong><a href=\"https://kynx.qzz.io/database-operations-and-the-use-of-navicat-17/\">上一篇文章</a></strong> 中已经可以对数据库进行增删查的操作，下面需要对数据库里面的数据表进行相同的操作。</p><h2 id=\"建立学生数据库\">建立学生数据库</h2>\n<h3 id=\"新建数据库\">新建数据库</h3>\n<pre><code class=\"language-mysql\">CREATE　DATABASE test;\n</code></pre>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"../input/media/files/MySQL学习笔记/数据库操作/image-20250916202458147.png\" alt=\"image-20250916202458147\" data-is-external-image=\"true\"></figure><h3 id=\"在数据库中添加学生信息的数据表\">在数据库中添加学生信息的数据表</h3>\n<blockquote>\n<ol>\n<li>学生的基本信息有<code>学号</code>，<code>姓名</code>等内容</li>\n<li>在基本信息中，学号一般不参加运算，所以采用字符类型<code>char</code>。姓名因为本身就是字符，也采用<code>char</code>，一般来说过学号长度一定，直接使用固定长度的<code>char</code>，姓名长短不一，使用自动分配字符长度的<code>varchar</code>更为合适一点</li>\n<li>学号是用来区分学生的唯一方式，应该是主键<code>PRIMARY KEY</code>，而姓名不能为空，所以使用<code>NOT NULL</code></li>\n</ol>\n</blockquote>\n<pre><code class=\"language-mysql\">USE test;\n\nCREATE TABLE student (\n  student_id char(12) PRIMARY KEY COMMENT &#39;学号&#39;,\n  student_name varchar(4) NOT NULL COMMENT &#39;姓名&#39;\n)\n</code></pre>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"../input/media/files/MySQL学习笔记/数据库操作/image-20250916202755818.png\" alt=\"image-20250916202755818\" data-is-external-image=\"true\"></figure><h3 id=\"成绩表中引用外键\">成绩表中引用外键</h3>\n<blockquote>\n<ol>\n<li>需要有<code>学号</code>，<code>成绩</code>，<code>姓名</code>，<code>成绩ID</code>等，其中学号为外键，<code>成绩ID</code>则是主键</li>\n<li><code>成绩</code>，<code>姓名</code>，<code>成绩ID</code>均不能为空</li>\n</ol>\n</blockquote>\n<pre><code class=\"language-mysql\">USE test;\nCREATE TABLE score(\n    score_id varchar(3) NOT NULL COMMENT &#39;成绩ID&#39;,\n    student_id varchar(3) NOT NULL COMMENT &#39;学号&#39;,\n    student_name varchar(4) NOT NULL COMMENT &#39;姓名&#39;,\n    CONSTRAINT score_student FOREIGN KEY (student_id) REFERENCES student (student_id)\n)\n</code></pre>\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"../input/media/files/MySQL学习笔记/数据库操作/image-20250916221125244.png\" alt=\"image-20250916221125244\" data-is-external-image=\"true\"></figure>",
            "image": "https://kynx.qzz.io/media/posts/23/23.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "MySQL学习笔记"
            ],
            "date_published": "2025-09-16T22:27:06+08:00",
            "date_modified": "2025-10-12T11:56:02+08:00"
        },
        {
            "id": "https://kynx.qzz.io/the-transform-property-enables-the-displacement-and-deformation-of-elements/",
            "url": "https://kynx.qzz.io/the-transform-property-enables-the-displacement-and-deformation-of-elements/",
            "title": "transform属性使元素位移及形变",
            "summary": "使用transition制作元素外观之间的简单变换动画，但是类似于图形的移动，形变等并不太方便通过原本属性进行变换的则可以使用transform属性进行变换。 函数功能&hellip;",
            "content_html": "<p>使用transition制作元素外观之间的简单变换动画，但是类似于图形的移动，形变等并不太方便通过原本属性进行变换的则可以使用transform属性进行变换。</p><h2 id=\"transform格式\">transform格式</h2>\n<p><strong>函数功能</strong></p><blockquote>\n<ul>\n<li><code>translate</code>：<strong>控制元素平移</strong></li>\n<li><code>scale</code>：<strong>控制元素缩放大小</strong></li>\n<li><code>rotate</code>：<strong>控制元素旋转，在2D下默认是Z轴</strong></li>\n<li><code>skew</code>：<strong>控制元素倾斜角度</strong></li>\n<li><code>translate3d</code>：<strong>控制元素平移</strong></li>\n<li><code>scale3d</code>：<strong>控制元素缩放大小</strong></li>\n<li><code>rotate3d</code>：<strong>控制元素旋转</strong></li>\n<li><code>skew3d</code>：<strong>控制元素倾斜角度</strong></li>\n</ul>\n</blockquote>\n<p><strong>函数用法</strong></p><pre><code class=\"language-css\">.element {\n    transform: translate(X轴移动位置, Y轴移动位置) scale(缩放比例，1为基础) rotate(角度) skew(相对于X轴的倾斜角度, 相对于Y轴的倾斜角度);\n}\n</code></pre>\n<p><strong>3d会比普通的的多一个Y值，最后一项是旋转角度，前面的X,Y,Z则是方向</strong></p><p>其中形变可以使用3D的一些效果，就分为2D和3D两个部分</p><h3 id=\"2d\">2D</h3>\n<p><strong>实现（translate为例，其他根据用法带入即可）</strong></p><pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=&quot;utf-8&quot;&gt;\n        &lt;title&gt;transform属性&lt;/title&gt;\n        &lt;style&gt;\n            .box {\n                width: 100px;\n                height: 100px;\n                background-color: tomato;\n                transition: transform 1s;\n            }\n            .box:hover {\n                transform: translate(50%);\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><strong>效果预览：</strong></p><div class=\"box\"></div><style>.box{width:100px;height:100px;background-color:tomato;transition:transform 1s;}.box:hover{transform:translate(50%);}</style>\n\n<h3 id=\"3d\">3D</h3>\n<p>需要在父元素中创建3D效果展示区域，便于展示</p><pre><code class=\"language-html\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta charset=&quot;utf-8&quot;&gt;\n        &lt;title&gt;transform3D属性&lt;/title&gt;\n        &lt;style&gt;\n            .container {\n                transform-style: preserve-3d;\n                perspective: 800px;\n            }\n            .box {\n                width: 100px;\n                height: 100px;\n                background-color: tomato;\n                transition: transform 1s;\n            }\n            .box:hover {\n                transform: rotate3d(1, 0, -1, 30deg); /* 或者是transform: rotateX(30deg) rotateZ(-30deg) */\n            }\n        &lt;/style&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;div class=&quot;container&quot;&gt;\n            &lt;div class=&quot;box&quot;&gt;&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<p><strong>效果预览：</strong></p><div class=\"container\"><div class=\"box\"></div></div><style>.container{transform-style:preserve-3d;perspective:800px;}.box{width:100px;height:100px;background-color:tomato;transition:transform 1s;}.box:hover{transform:rotate3d(1,0,-1,30deg);}</style>\n\n<h3 id=\"详细展示-\"><a href=\"../transform/tutorial.html\">详细展示 =&gt;</a></h3>\n<h3 id=\"自测题目-\"><a href=\"../transform/test.html\">自测题目 =&gt;</a></h3>\n",
            "image": "https://kynx.qzz.io/media/posts/22/22.png",
            "author": {
                "name": "和光同尘"
            },
            "tags": [
                   "HTML&amp;CSS指北"
            ],
            "date_published": "2025-09-10T22:51:23+08:00",
            "date_modified": "2025-10-14T20:56:04+08:00"
        }
    ]
}
